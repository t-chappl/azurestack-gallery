{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "windowsAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Windows Virtual Machines that are part of the Kubernetes cluster."
      }
    },
    "windowsAdminPassword": {
      "type": "string",
      "defaultValue": "password",
      "metadata": {
        "description": "Password for the Windows Virtual Machines that are part of the Kubernetes cluster."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "osType": {
      "defaultValue": "linux",
      "metadata": {
        "description": "The node pool operating system(s)"
      },
      "type": "string"
    },
    "linuxPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Linux Node Pool Profile Count"
      },
      "type": "int"
    },
    "linuxPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node Linux VMs"
      },
      "type": "string"
    },
    "linuxAvailabilityProfile": {
      "defaultValue": "AvailabilitySet",
      "metadata": {
        "description": "The Linux node pool availability profile"
      },
      "type": "string"
    },
    "windowsPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Windows Node Pool Profile Count"
      },
      "type": "int"
    },
    "windowsPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node Windows VMs"
      },
      "type": "string"
    },
    "windowsAvailabilityProfile": {
      "defaultValue": "AvailabilitySet",
      "metadata": {
        "description": "The Windows node pool availability profile"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of Azure Stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.12",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    },
    "networkPlugin": {
      "type": "string",
      "defaultValue": "kubenet",
      "metadata": {
        "description": "This is the network plugin that the Kubernetes cluster will be deployed with"
      }
    },
    "aksEngineBaseURL": {
      "type": "string",
      "defaultValue": "https://github.com/Azure/aks-engine/releases/download",
      "metadata": {
        "description": "The beginning of the URL for downloading the AKS Engine binary"
      }
    },
    "aksEngineReleaseVersion": {
      "type": "string",
      "defaultValue": "v0.37.4",
      "metadata": {
        "description": "The version of AKS Engine to download"
      }
    },
    "galleryRepository": {
      "type": "string",
      "defaultValue": "t-chappl/azurestack-gallery",
      "metadata": {
        "description": "Marketplace item repository"
      }
    },
    "galleryBranch": {
      "type": "string",
      "defaultValue": "updates",
      "metadata": {
        "description": "Marketplace item branch"
      }
    },
    "clusterDefinitionFileName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The name of the file containing the cluster definition"
      }
    },
    "kubernetesImageBase": {
      "type": "string",
      "defaultValue": "mcr.microsoft.com/k8s/azurestack/core/",
      "metadata": {
        "description": "The base for Kubernetes images"
      }
    },
    "nodeDistro": {
      "defaultValue": "ubuntu",
      "allowedValues": [
        "ubuntu",
        "aks-ubuntu-16.04"
      ],
      "metadata": {
        "description": "Node distro to be used to deploy Kubernetes on Azure Stack."
      },
      "type": "string"
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' NODE_DISTRO=','\"',parameters('nodeDistro'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' LINUX_ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' WINDOWS_ADMIN_USERNAME=','\"',parameters('windowsAdminUsername'),'\"',' WINDOWS_ADMIN_PASSWORD=','\"',parameters('windowsAdminPassword'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"',' OS_TYPE=','\"',parameters('osType'),'\"',' LINUX_AGENT_COUNT=','\"',parameters('linuxPoolProfileCount'),'\"' ,' LINUX_AGENT_SIZE=','\"',parameters('linuxPoolProfileVMSize'),'\"',' LINUX_AVAILABILITY_PROFILE=','\"',parameters('linuxAvailabilityProfile'),'\"',' WINDOWS_AGENT_COUNT=','\"',parameters('windowsPoolProfileCount'),'\"' ,' WINDOWS_AGENT_SIZE=','\"',parameters('windowsPoolProfileVMSize'),'\"' ,' WINDOWS_AVAILABILITY_PROFILE=','\"',parameters('windowsAvailabilityProfile'),'\"',' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"',' AKSE_BASE_URL=','\"',parameters('aksEngineBaseURL'), '\"', ' AKSE_RELEASE_VERSION=','\"',parameters('aksEngineReleaseVersion'),'\"',' GALLERY_REPO=','\"',parameters('galleryRepository'),'\"',' GALLERY_BRANCH=','\"',parameters('galleryBranch'),'\"',' DEFINITION_TEMPLATE_NAME=','\"',parameters('clusterDefinitionFileName'),'\"',' K8S_IMAGE_BASE=','\"',parameters('kubernetesImageBase'),'\"',' NETWORK_PLUGIN=','\"',parameters('networkPlugin'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
