{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "windowsAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Windows Virtual Machines that are part of the Kubernetes cluster."
      }
    },
    "windowsAdminPassword": {
      "type": "string",
      "metadata": {
        "description": "Password for the Windows Virtual Machines that are part of the Kubernetes cluster."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "osType": {
      "defaultValue": "linux",
      "metadata": {
        "description": "The node pool operating system(s)"
      },
      "type": "string"
    },
    "linuxPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Linux Node Pool Profile Count"
      },
      "type": "int"
    },
    "linuxPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node Linux VMs"
      },
      "type": "string"
    },
    "linuxAvailabilityProfile": {
      "defaultValue": "AvailabilitySet",
      "metadata": {
        "description": "The Linux node pool availability profile"
      },
      "type": "string"
    },
    "windowsPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Windows Node Pool Profile Count"
      },
      "type": "int"
    },
    "windowsPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node Windows VMs"
      },
      "type": "string"
    },
    "windowsAvailabilityProfile": {
      "defaultValue": "AvailabilitySet",
      "metadata": {
        "description": "The Windows node pool availability profile"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of Azure Stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.12",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    },
    "networkPlugin": {
      "type": "string",
      "defaultValue": "kubenet",
      "metadata": {
        "description": "This is the network plugin that the Kubernetes cluster will be deployed with"
      }
    },
    "aksEngineBaseURL": {
      "type": "string",
      "defaultValue": "https://github.com/Azure/aks-engine/releases/download",
      "metadata": {
        "description": "The beginning of the URL for downloading the AKS Engine binary"
      }
    },
    "aksEngineReleaseVersion": {
      "type": "string",
      "defaultValue": "v0.37.4",
      "metadata": {
        "description": "The version of AKS Engine to download"
      }
    },
    "galleryRepository": {
      "type": "string",
      "defaultValue": "msazurestackworkloads/azurestack-gallery",
      "metadata": {
        "description": "Marketplace item repository"
      }
    },
    "galleryBranch": {
      "type": "string",
      "defaultValue": "master",
      "metadata": {
        "description": "Marketplace item branch"
      }
    },
    "clusterDefinitionFileName": {
      "type": "string",
      "metadata": {
        "description": "The name of the file containing the cluster definition"
      }
    },
    "kubernetesImageBase": {
      "type": "string",
      "defaultValue": "mcr.microsoft.com/k8s/azurestack/core/",
      "metadata": {
        "description": "The base for Kubernetes images"
      }
    },
    "nodeDistro": {
      "defaultValue": "ubuntu",
      "allowedValues": [
        "ubuntu",
        "aks-ubuntu-16.04"
      ],
      "metadata": {
        "description": "Node distro to be used to deploy Kubernetes on Azure Stack."
      },
      "type": "string"
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' NODE_DISTRO=','\"',parameters('nodeDistro'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' LINUX_ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' WINDOWS_ADMIN_USERNAME=','\"',parameters('windowsAdminUsername'),'\"',' WINDOWS_ADMIN_PASSWORD=','\"',parameters('windowsAdminPassword'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"',' OS_TYPE=','\"',parameters('osType'),'\"',' LINUX_AGENT_COUNT=','\"',parameters('linuxPoolProfileCount'),'\"' ,' LINUX_AGENT_SIZE=','\"',parameters('linuxPoolProfileVMSize'),'\"',' LINUX_AVAILABILITY_PROFILE=','\"',parameters('linuxAvailabilityProfile'),'\"',' WINDOWS_AGENT_COUNT=','\"',parameters('windowsPoolProfileCount'),'\"' ,' WINDOWS_AGENT_SIZE=','\"',parameters('windowsPoolProfileVMSize'),'\"' ,' WINDOWS_AVAILABILITY_PROFILE=','\"',parameters('windowsAvailabilityProfile'),'\"',' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"',' AKSE_BASE_URL=','\"',parameters('aksEngineBaseURL'), '\"', ' AKSE_RELEASE_VERSION=','\"',parameters('aksEngineReleaseVersion'),'\"',' GALLERY_REPO=','\"',parameters('galleryRepository'),'\"',' GALLERY_BRANCH=','\"',parameters('galleryBranch'),'\"',' DEFINITION_TEMPLATE_NAME=','\"',parameters('clusterDefinitionFileName'),'\"',' K8S_IMAGE_BASE=','\"',parameters('kubernetesImageBase'),'\"',' NETWORK_PLUGIN=','\"',parameters('networkPlugin'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
