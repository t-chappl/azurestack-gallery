{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of Azure Stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
