{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "windowsAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Windows Virtual Machines that are part of the Kubernetes cluster."
      }
    },
    "windowsAdminPassword": {
      "type": "string",
      "metadata": {
        "description": "Password for the Windows Virtual Machines that are part of the Kubernetes cluster."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "osType": {
      "defaultValue": "linux",
      "metadata": {
        "description": "The node pool operating system(s)"
      },
      "type": "string"
    },
    "linuxPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Linux Node Pool Profile Count"
      },
      "type": "int"
    },
    "linuxPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node Linux VMs"
      },
      "type": "string"
    },
    "linuxAvailabilityProfile": {
      "defaultValue": "AvailabilitySet",
      "metadata": {
        "description": "The Linux node pool availability profile"
      },
      "type": "string"
    },
    "windowsPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Windows Node Pool Profile Count"
      },
      "type": "int"
    },
    "windowsPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node Windows VMs"
      },
      "type": "string"
    },
    "windowsAvailabilityProfile": {
      "defaultValue": "AvailabilitySet",
      "metadata": {
        "description": "The Windows node pool availability profile"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "defaultValue": "servicePrincipalClientSecret",
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of Azure Stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.12",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    },
    "networkPlugin": {
      "type": "string",
      "defaultValue": "kubenet",
      "metadata": {
        "description": "This is the network plugin that the Kubernetes cluster will be deployed with"
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
      },
      "defaultValue": "[deployment().properties.templateLink.uri]"
    },
    "aksEngineBaseURL": {
      "type": "string",
      "defaultValue": "https://github.com/Azure/aks-engine/releases/download",
      "metadata": {
        "description": "The beginning of the URL for downloading the AKS Engine binary"
      }
    },
    "aksEngineReleaseVersion": {
      "type": "string",
      "defaultValue": "v0.37.4",
      "metadata": {
        "description": "The version of AKS Engine to download"
      }
    },
    "galleryRepository": {
      "type": "string",
      "defaultValue": "msazurestackworkloads/azurestack-gallery",
      "metadata": {
        "description": "Marketplace item repository"
      }
    },
    "galleryBranch": {
      "type": "string",
      "defaultValue": "master",
      "metadata": {
        "description": "Marketplace item branch"
      }
    },
    "clusterDefinitionFileName": {
      "type": "string",
      "metadata": {
        "description": "The name of the file containing the cluster definition"
      }
    },
    "nodeDistro": {
      "defaultValue": "ubuntu",
      "allowedValues": [
        "ubuntu",
        "aks-ubuntu-16.04"
      ],
      "metadata": {
        "description": "Node distro to be used to deploy Kubernetes on Azure Stack."
      },
      "type": "string"
    },
    "kubernetesImageBase": {
      "type": "string",
      "defaultValue": "mcr.microsoft.com/k8s/azurestack/core/",
      "metadata": {
        "description": "The base for Kubernetes images"
      }
    }
  },
  "variables": {},
  "resources": [
    {
      "apiVersion": "2015-01-01",
      "name": "dvmdeployment",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "contentVersion": "1.0.0.0",
          "uri": "[uri(parameters('_artifactsLocation'), 'azuredeploy.json')]"
        },
        "parameters": {
          "linuxAdminUsername": {
            "value": "[parameters('linuxAdminUsername')]"
          },
          "windowsAdminUsername": {
            "value": "[parameters('windowsAdminUsername')]"
          },
          "windowsAdminPassword": {
            "value": "[parameters('windowsAdminPassword')]"
          },
          "sshPublicKey": {
            "value": "[parameters('sshPublicKey')]"
          },
          "masterProfileDnsPrefix": {
            "value": "[parameters('masterProfileDnsPrefix')]"
          },
          "osType": {
            "value": "[parameters('osType')]"
          },
          "linuxPoolProfileCount": {
            "value": "[parameters('linuxPoolProfileCount')]"
          },
          "linuxPoolProfileVMSize": {
            "value": "[parameters('linuxPoolProfileVMSize')]"
          },
          "linuxAvailabilityProfile": {
            "value": "[parameters('linuxAvailabilityProfile')]"
          },
          "windowsPoolProfileCount": {
            "value": "[parameters('windowsPoolProfileCount')]"
          },
          "windowsPoolProfileVMSize": {
            "value": "[parameters('windowsPoolProfileVMSize')]"
          },
          "windowsAvailabilityProfile": {
            "value": "[parameters('windowsAvailabilityProfile')]"
          },
          "masterPoolProfileCount": {
            "value": "[parameters('masterPoolProfileCount')]"
          },
          "masterPoolProfileVMSize": {
            "value": "[parameters('masterPoolProfileVMSize')]"
          },
          "storageProfile": {
            "value": "[parameters('storageProfile')]"
          },
          "servicePrincipalClientId": {
            "value": "[parameters('servicePrincipalClientId')]"
          },
          "servicePrincipalClientSecret": {
            "value": "[parameters('servicePrincipalClientSecret')]"
          },
          "kubernetesAzureCloudProviderVersion": {
            "value": "[parameters('kubernetesAzureCloudProviderVersion')]"
          },
          "networkPlugin": {
            "value": "[parameters('networkPlugin')]"
          },
          "identitySystem": {
            "value": "[parameters('identitySystem')]"
          },
          "nodeDistro": {
            "value": "[parameters('nodeDistro')]"
          },
          "aksEngineBaseURL": {
            "value": "[parameters('aksEngineBaseURL')]"
          },
          "aksEngineReleaseVersion": {
            "value": "[parameters('aksEngineReleaseVersion')]"
          },
          "galleryRepository": {
            "value": "[parameters('galleryRepository')]"
          },
          "galleryBranch": {
            "value": "[parameters('galleryBranch')]"
          },
          "clusterDefinitionFileName": {
            "value": "[parameters('clusterDefinitionFileName')]"
          },
          "kubernetesImageBase": {
            "value": "[parameters('kubernetesImageBase')]"
          }
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "type": "string",
      "value": "[reference('dvmdeployment').outputs.dvmPublicIpFqdn.value]"
    }
  }
}